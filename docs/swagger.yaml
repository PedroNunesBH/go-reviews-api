basePath: /
definitions:
  dto.RestaurantDTO:
    properties:
      address:
        type: string
      cnpj:
        type: string
      name:
        type: string
    type: object
  entity.Restaurant:
    properties:
      address:
        type: string
      cnpj:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is an API for restaurant review management
  termsOfService: http://swagger.io/terms/
  title: Reviews API
  version: "1.0"
paths:
  /restaurants:
    get:
      consumes:
      - application/json
      description: Get all restaurants
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Get all restaurants
      tags:
      - restaurants
  /restaurants/:
    post:
      consumes:
      - application/json
      description: Creat a restaurant
      parameters:
      - description: Restaurant data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RestaurantDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Creat a restaurant
      tags:
      - restaurants
  /restaurants/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a restaurant
      parameters:
      - description: restaurant ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Delete a restaurant
      tags:
      - restaurants
    get:
      consumes:
      - application/json
      description: Get a restaurant
      parameters:
      - description: restaurant ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Restaurant'
            type: array
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: List restaurants
      tags:
      - restaurants
    put:
      consumes:
      - application/json
      description: Update a restaurant
      parameters:
      - description: restaurant ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Restaurant data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RestaurantDTO'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Update a restaurant
      tags:
      - restaurants
swagger: "2.0"
